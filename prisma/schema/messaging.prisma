model Ticket {
  id             String       @id @default(ulid())
  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  organizationId String
  customer       User         @relation(fields: [customerId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  customerId     String
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  closedAt       DateTime?
  messages       Message[]
  status         TicketStatus @default(OPEN)
}

model Message {
  id         String     @id @default(ulid())
  ticket     Ticket     @relation(fields: [ticketId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  sender     User       @relation(fields: [senderId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  senderId   String
  senderType SenderType @default(CUSTOMER)
  ticketId   String
  content    String
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}

enum TicketStatus {
  OPEN
  CLOSED
}

enum SenderType {
  AGENT
  BOT
  CUSTOMER
}
